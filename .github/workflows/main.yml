name: Update Org Stats

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:

jobs:
  update-org-stats:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure profile directory exists
        run: mkdir -p profile

      - name: Fetch Organization Stats (Fixing API Issue)
        env:
          GITHUB_TOKEN: ${{ secrets.GH_API_TOKEN }}
        run: |
          ORG_NAME="WildRoseDevs"

          echo "Fetching repositories..."
          REPO_RESPONSE=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
                                 -H "Accept: application/vnd.github+json" \
                                 "https://api.github.com/orgs/$ORG_NAME/repos?per_page=100&type=all")

          # Debugging: Print the raw response
          echo "Raw API Response for Repos:"
          echo "$REPO_RESPONSE"

          # Check if the API response is JSON
          if echo "$REPO_RESPONSE" | jq empty 2>/dev/null; then
              REPO_COUNT=$(echo "$REPO_RESPONSE" | jq length)
          else
              echo "❌ Error: API did not return valid JSON. Check token permissions."
              exit 1
          fi

          echo "Total Repositories: $REPO_COUNT"

          # Fetch Total Members
          MEMBER_RESPONSE=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
                                   -H "Accept: application/vnd.github+json" \
                                   "https://api.github.com/orgs/$ORG_NAME/members?per_page=100&filter=all")

          echo "Raw API Response for Members:"
          echo "$MEMBER_RESPONSE"

          if echo "$MEMBER_RESPONSE" | jq empty 2>/dev/null; then
              MEMBER_COUNT=$(echo "$MEMBER_RESPONSE" | jq length)
          else
              echo "❌ Error: API did not return valid JSON for members."
              exit 1
          fi

          MEMBER_COUNT=$((MEMBER_COUNT))
          echo "Total Members: $MEMBER_COUNT"

          # Get repositories from GitHub CLI instead of API
          echo "Fetching repository list using gh CLI..."
          REPO_LIST=$(gh repo list $ORG_NAME --json name --jq '.[].name')

          if [ -z "$REPO_LIST" ]; then
              echo "❌ Error: gh CLI could not retrieve repos. Check token permissions."
              exit 1
          fi

          echo "Repositories Retrieved: $REPO_LIST"

          # Clone each repo to count commits
          COMMIT_COUNT=0
          mkdir -p temp_repos
          cd temp_repos || exit

          for repo in $REPO_LIST; do
              echo "Processing repo: $repo"

              if git clone --mirror "https://$GITHUB_TOKEN@github.com/$ORG_NAME/$repo.git"; then
                  cd "$repo.git" || continue
                  REPO_COMMITS=$(git rev-list --all --count || echo "0")
                  echo "Commits in $repo: $REPO_COMMITS"
                  COMMIT_COUNT=$((COMMIT_COUNT + REPO_COMMITS))
                  cd ..
              else
                  echo "❌ Failed to clone $repo"
              fi
          done

          echo "Total Commits Counted: $COMMIT_COUNT"

          echo "ORG_REPOS=$REPO_COUNT" >> $GITHUB_ENV
          echo "ORG_MEMBERS=$MEMBER_COUNT" >> $GITHUB_ENV
          echo "ORG_COMMITS=$COMMIT_COUNT" >> $GITHUB_ENV

      - name: Update Organization README.md
        run: |
          cat <<EOF > profile/README.md
          # 📊 Wild Rose Devs. Statistics

          | Metric            | Count |
          |------------------|------|
          | 📂 Total Repositories | $ORG_REPOS |
          | 🔥 Total Commits   | $ORG_COMMITS |
          | 👥 Total Members   | $ORG_MEMBERS |

          EOF

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add profile/README.md
          git commit -m "Update organization statistics [bot]" || echo "No changes to commit"
          git push
