name: Update Org Stats

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows manual execution

jobs:
  update-org-stats:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure profile directory exists
        run: mkdir -p profile

      - name: Fetch Organization Stats (Cloning Fix)
        env:
          GITHUB_TOKEN: ${{ secrets.GH_API_TOKEN }}
        run: |
          ORG_NAME="JM-n-Co"

          # Fetch Total Repositories (Includes Private)
          REPO_COUNT=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
                       -H "Accept: application/vnd.github+json" \
                       "https://api.github.com/orgs/$ORG_NAME/repos?per_page=100&type=all" | jq length)

          # Fetch Total Members (Includes Private Members) and subtract 1
          MEMBER_COUNT=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
                         -H "Accept: application/vnd.github+json" \
                         "https://api.github.com/orgs/$ORG_NAME/members?per_page=100&filter=all" | jq length)
          MEMBER_COUNT=$((MEMBER_COUNT - 1))

          # Initialize commit count
          COMMIT_COUNT=0
          mkdir -p temp_repos
          cd temp_repos || exit

          # Get all repositories
          REPO_LIST=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
                             -H "Accept: application/vnd.github+json" \
                             "https://api.github.com/orgs/$ORG_NAME/repos?per_page=100&type=all" | jq -r '.[].name')

          # Clone each repo and count commits
          for repo in $REPO_LIST; do
              echo "Processing repo: $repo"

              # Clone full repository history
              if git clone --mirror "https://$GITHUB_TOKEN@github.com/$ORG_NAME/$repo.git"; then
                  cd "$repo.git" || continue
                  
                  # Count commits across all branches
                  REPO_COMMITS=$(git rev-list --all --count || echo "0")
                  
                  echo "Commits in $repo: $REPO_COMMITS"
                  COMMIT_COUNT=$((COMMIT_COUNT + REPO_COMMITS))
                  
                  cd ..
              else
                  echo "Failed to clone $repo"
              fi
          done

          # Handle null commits issue (default to 0 if empty)
          if [ -z "$COMMIT_COUNT" ] || [ "$COMMIT_COUNT" = "null" ]; then
            COMMIT_COUNT=0
          fi

          # Debug Output
          echo "Repositories: $REPO_COUNT"
          echo "Members: $MEMBER_COUNT"
          echo "Total Commits Counted: $COMMIT_COUNT"

          echo "ORG_REPOS=$REPO_COUNT" >> $GITHUB_ENV
          echo "ORG_MEMBERS=$MEMBER_COUNT" >> $GITHUB_ENV
          echo "ORG_COMMITS=$COMMIT_COUNT" >> $GITHUB_ENV

      - name: Update Organization README.md
        run: |
          cat <<EOF > profile/README.md
          # ðŸ“Š Dev. Jack Statistics

          | Metric            | Count |
          |------------------|------|
          | ðŸ“‚ Total Repositories | $ORG_REPOS |
          | ðŸ”¥ Total Commits   | $ORG_COMMITS |
          | ðŸ‘¥ Total Members   | $ORG_MEMBERS |

          EOF

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add profile/README.md
          git commit -m "Update organization statistics [bot]" || echo "No changes to commit"
          git push
